<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-US</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>MY APPLICATION</value>
  </data>
  <data name="SampleProperty" xml:space="preserve">
    <value>Sample Runtime Property Value</value>
  </data>
  <data name="AppBarButtonText" xml:space="preserve">
    <value>add</value>
  </data>
  <data name="AppBarMenuItemText" xml:space="preserve">
    <value>Menu Item</value>
  </data>
  <data name="SecondaryWaterMarkText" xml:space="preserve">
    <value>Enter secondary number</value>
    <comment>Informs user to enter secondary number</comment>
  </data>
  <data name="InitialSetupHeader" xml:space="preserve">
    <value>Get Started!</value>
    <comment>Header for initial setup</comment>
  </data>
  <data name="InitialSetupMessage" xml:space="preserve">
    <value>Enter your new device's number to set up your first pairing.</value>
    <comment>Message for initial setup</comment>
  </data>
  <data name="PinCodeVerificationHeader" xml:space="preserve">
    <value>Check Your Messages!</value>
    <comment>Header for pin code verification</comment>
  </data>
  <data name="PinCodeVerificationMessage1" xml:space="preserve">
    <value>A 6-digit code was sent to </value>
    <comment>First half of message for pin code verification</comment>
  </data>
  <data name="PinCodeVerificationMessage2" xml:space="preserve">
    <value>.Please enter the code below and tap next.</value>
    <comment>Second half of message for pin code verification</comment>
  </data>
  <data name="TwinningOnStatus" xml:space="preserve">
    <value>Twinning is on and active</value>
    <comment>Message to be displayed when twinning status is on</comment>
  </data>
  <data name="TwinningOffStatus" xml:space="preserve">
    <value>Twinning is off</value>
    <comment>Message to be displayed when twinning status is off</comment>
  </data>
  <data name="IntroScreenText" xml:space="preserve">
    <value>All your messages and calls on  two devices using the same phone number.</value>
    <comment>Introduction text for twinning setup.</comment>
  </data>
  <data name="TwinningAgreementText" xml:space="preserve">
    <value>This application needs  access to your voice and messaging mailboxes.By tapping 'Accept' below you can that you have read and agree</value>
  </data>
  <data name="TwinningPrivacyPolicyText" xml:space="preserve">
    <value>PrivacyPolicy</value>
  </data>
  <data name="TwinningTermsOfServiceText" xml:space="preserve">
    <value>TermsOfService</value>
  </data>
  <data name="TwinningAboutContentText" xml:space="preserve">
    <value>The AT&amp;T Twinning mobile application is a free
and easy to use mobile resource allowing you
to link your devices together so you can receive
communications from any device.</value>
    <comment>Text To be Displayed on About Page of TwnningApp</comment>
  </data>
  <data name="TwinningCopyRightText" xml:space="preserve">
    <value>AT&amp;T Mobile Services
© 2014 AT&amp;T Corporation</value>
  </data>
  <data name="TwinningVersion" xml:space="preserve">
    <value>Version 1.0</value>
    <comment>Text To Display the Version of App</comment>
  </data>
  <data name="InfoText" xml:space="preserve">
    <value>Zombie ipsum reversus ab viral inferno, nam rick grimes malum cerebro. De carne lumbering animata corpora quaeritis. Summus brains sit , morbo vel maleficia? De apocalypsi gorger
omero undead survivor dictum mauris. Hi mindless mortuis soulless creaturas, imo evil stalking monstra adventus resi dentevil vultus comedat cerebella viventium.</value>
    <comment>Text for FAQs</comment>
  </data>
</root>