using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Navigation;
using Microsoft.Phone.Controls;
using Microsoft.Phone.Shell;
using TwinningAPIWrapper;
using TwinningAPIWrapper.Globals;
using myanumber.Resources;

namespace myanumber
{
    public partial class InitialTwinning : PhoneApplicationPage
    {
        private static bool Registered;
        public InitialTwinning()
        {
            InitializeComponent();
            try
            {
                TwinningAPI apiWrapper = TwinningAPI.Instance;
                LinkedNumberTextBox.Text = AppResources.SecondaryWaterMarkText;
                PrimaryPhoneNumber.Text = apiWrapper.GetPrimaryDevicePhoneNumber();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
        }

        protected override void OnNavigatedTo(NavigationEventArgs e)
        {
             try
            {
                base.OnNavigatedTo(e);
                if (PhoneApplicationService.Current.State.ContainsKey("SecondaryPhoneNumber"))
                {
                    if (PhoneApplicationService.Current.State["SecondaryPhoneNumber"].ToString().Length != 0)
                    {
                        LinkedNumberTextBox.Text = PhoneApplicationService.Current.State["SecondaryPhoneNumber"].ToString();
                    }
                }
            }
            catch (Exception ex)
            {
                throw;
            }
            }

        public void DispatchInvoke(Action a)
        {
#if SILVERLIGHT
            if (Dispatcher == null)
                a();
            else
                Dispatcher.BeginInvoke(a);
#else
            if ((Dispatcher != null) && (!Dispatcher.HasThreadAccess))
            {
                Dispatcher.InvokeAsync(
                            Windows.UI.Core.CoreDispatcherPriority.Normal, 
                            (obj, invokedArgs) => { a(); }, 
                            this, 
                            null
                 );
                        }
            else
                a();
#endif
        }

        private void TwinnningInitialPage_Loaded(object sender, RoutedEventArgs e)
        {
            try
            {
                TwinningAPI apiWrapper = TwinningAPI.Instance;              

                //First check if the device is twinned
                if (!(apiWrapper.IsTwinningEstablished()) && !Registered)
                {
                    //It is not twinned.
                    //Register the device with the Server API
                    apiWrapper.AddPrimaryDevice(new Delegates.OnSuccessCallback(this.OnPrimaryAddSuccess),
                                            new Delegates.OnErrorCallback(this.OnError));

                   
                }
                else
                {
                    //It is twinned.                    
                }
            }
            catch (Exception ex)
            {
                throw;
            }
        }

        private void OnPrimaryAddSuccess()
        {
            try
            {
                DispatchInvoke(() =>
                {
                    MessageBox.Show(TempDataResource.NumberRegistered);
                    Registered = true;
                });
            }
            catch (Exception ex)
            {
                throw;
            }
        }

        private void OnError(string message)
        {
            try
            {
                DispatchInvoke(() =>
                {
                    MessageBox.Show(message);
                });
            }
            catch (Exception ex)
            {
                throw;
            }
        }

        private void LinkedNumberTextBox_GotFocus(object sender, RoutedEventArgs e)
        {
            try
            {
                LinkedNumberTextBox.Text = "";
                NavigationService.Navigate(new Uri("/EnterLinkedNumber.xaml", UriKind.Relative));
            }
            catch (Exception ex)
            {
                throw;
            }
        }

        private void LinkedNumberTextBox_LostFocus(object sender, RoutedEventArgs e)
        {
            try
            {
                LinkedNumberTextBox.Text = AppResources.SecondaryWaterMarkText;

            }
            catch (Exception ex)
            {
                throw;
            }
        }

        private void NextButton_Click(object sender, RoutedEventArgs e)
        {
            try
            {

            }
            catch (Exception ex)
            {
                throw;
            }
        }        
       
    }
}